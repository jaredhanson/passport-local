This is a very similar example as express3-mongoose example with a couple differences. 

1. Node app is now split up into multiple files

db/schema.js - mongoose database schema
db/seed.js - seed the database, can be run as a jake task with 'jake -f db/seed.js seed'
db/drop.js - drop the database, can be run as a jake task with 'jake -f db/drop.js drop'

config/pass.js - contains most of the passport configuration, also contains an additional admin middleware function

routes/basic.js - basic routes paths
routes/user.js - user paths (login, account, etc)

app.js - main server code

2. Updated package.json file
You can now run npm install without fear and you won't run into ejs errors when rendering layouts.  The layout was changed to a header and a footer.

3. You can check roles or for admin by modifying the ensureAdmin method in config/pass.js to ensureRole('admin').  Simply add it as an additional middleware as shown in the '/admin' path in app.js

4. You will need to install jake to seed and drop the database.  

https://github.com/mde/jake

npm install -g jake

You will then be able to run 

jake --version
jake --help

You can seed and drop the database with a jake task by running the following commands from the root directory of the node app in terminal.

jake -f db/seed.js seed
jake -f db/drop.js drop
